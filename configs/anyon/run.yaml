warmup:
  embed: true
  embed_pca_path: pca_patch_32_s32.pt
  global: false
  # global_pca_path: ${PCA_DIR}/pca_4096.pt   # could be a tensor U or dict with {'U', 'S', 'explained_variance_ratio'}
  # r: 128      # Low-rank dimension for Q/K/V (try 128 or 64)
  # freeze_qk_epochs: 5
  # lora: true  # if true, use low-rank (D->r->D) projections for Q/K/V
  # enabled: true
  # stats_path: pca_patch.pt, # 预先保存的 PCA 统计
  # attn_path: "model.vit.encoder.layer.0.attention"
  # whiten: true
  # robust: false
  # kernel: null       # 或 'rbf'
  # nystrom_m: 256
  # cka: true
  # cka_every: 1
  # cka_kernel: 'linear'

  
model:
  name: vit
  task_type: reg
  num_labels: 3
  image_size: 4096    
  patch_size: 32
  hidden_size: 32
  num_hidden_layers: 2
  num_attention_heads: 1
  stride_size: 32
  proj_fn: 'SW'

train:
  batch_size: 128
  ep: 1
  debug: 0
  workers: 10
  save: false
  # precision: '16-mixed'   # uncomment to reduce memory further

loss: 
  name: 'l1'

opt:
  type: 'adam'
  lr: 0.001
  lr_sch: plateau
  factor: 0.8
  patience: 2

data:
  # Define env var DATA_ROOT, e.g.:
  # export DATA_ROOT=/datascope/subaru/user/swei20/data/bosz50000/z0
  file_path: "${TRAIN_DIR}/dataset.h5"
  val_path:  "${VAL_DIR}/dataset.h5"
  test_path: "${TEST_DIR}/dataset.h5"
  # file_path: '/datascope/subaru/user/swei20/data/bosz50000/test/mag215/train_100k/dataset.h5'
  # val_path: '/datascope/subaru/user/swei20/data/bosz50000/mag215/train_1k/dataset.h5'
  # test_path: '/datascope/subaru/user/swei20/data/bosz50000/mag215/val_1k/dataset.h5'
  num_samples: 100
  num_test_samples: 100
  param: T_eff, log_g, M_H
  label_norm: 'minmax' # 'standard', 'minmax', 'zscore', or 'none'

mask:
  mask_ratio: 0.85

noise:
  noise_level: 0

project: 'vit-test0'
